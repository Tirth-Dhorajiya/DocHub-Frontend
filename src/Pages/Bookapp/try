import React, { useState } from "react";
import { Container, Form, Button, Modal, Row, Col } from "react-bootstrap";
import Header from "../../common/Header/Header";
import Footer from "../../common/Footer/Footer";
import axios from "axios";
import hospitalsData from "./hospitals.json";
import doctors from "./doctors.json";

const Bookapp = () => {
  const userEmail = JSON.parse(localStorage.getItem("user"))?.email || "";
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    appointmentDate: "",
    hospital: "",
    doctor: "",
  });
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const [errors, setErrors] = useState({});

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const validateForm = () => {
    let newErrors = {};
    if (!formData.name) newErrors.name = "Please enter your name.";
    if (!formData.phone) newErrors.phone = "Please enter your phone number.";
    if (!formData.appointmentDate)
      newErrors.appointmentDate = "Please select an appointment date.";
    if (!formData.hospital) newErrors.hospital = "Please select a hospital.";
    if (!formData.doctor) newErrors.doctor = "Please select a doctor.";
    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (validateForm()) {
      try {
        await axios.post("http://localhost:5000/api/appointments", {
          ...formData,
          userEmail,
        });
        setShowSuccessModal(true);
        setFormData({
          name: "",
          phone: "",
          appointmentDate: "",
          hospital: "",
          doctor: "",
        });
        setErrors({});
      } catch (error) {
        console.error("Error booking appointment:", error);
      }
    }
  };

  return (
    <>
      <Header />
      <Container className="mt-5">
        <h2 className="text-center">Book an Appointment</h2>
        <Form onSubmit={handleSubmit}>
          <Form.Group className="mb-3">
            <Form.Label>Name</Form.Label>
            <Form.Control
              type="text"
              name="name"
              value={formData.name}
              onChange={handleInputChange}
              placeholder="Enter your name"
            />
            {errors.name && <p className="text-danger">{errors.name}</p>}
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Phone</Form.Label>
            <Form.Control
              type="text"
              name="phone"
              value={formData.phone}
              onChange={handleInputChange}
              placeholder="Enter your phone number"
            />
            {errors.phone && <p className="text-danger">{errors.phone}</p>}
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Appointment Date</Form.Label>
            <Form.Control
              type="date"
              name="appointmentDate"
              value={formData.appointmentDate}
              onChange={handleInputChange}
            />
            {errors.appointmentDate && (
              <p className="text-danger">{errors.appointmentDate}</p>
            )}
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Hospital</Form.Label>
            <Form.Control
              as="select"
              name="hospital"
              value={formData.hospital}
              onChange={handleInputChange}
            >
              <option value="">Choose preferred Hospital</option>
              {hospitalsData.map((hospital, index) => (
                <option key={index} value={hospital}>
                  {hospital}
                </option>
              ))}
            </Form.Control>
            {errors.hospital && (
              <p className="text-danger">{errors.hospital}</p>
            )}
          </Form.Group>
          <Form.Group className="mb-3">
            <Form.Label>Doctor</Form.Label>
            <Form.Control
              as="select"
              name="doctor"
              value={formData.doctor}
              onChange={handleInputChange}
            >
              <option value="">Choose preferred Doctor</option>
              {doctors.map((doctor, index) => (
                <option key={index} value={doctor}>
                  {doctor}
                </option>
              ))}
            </Form.Control>
            {errors.doctor && <p className="text-danger">{errors.doctor}</p>}
          </Form.Group>
          <Button variant="primary" type="submit">
            Book Appointment
          </Button>
        </Form>
        <Modal
          show={showSuccessModal}
          onHide={() => setShowSuccessModal(false)}
        >
          <Modal.Header closeButton>
            <Modal.Title>Success</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            Your appointment has been successfully booked!
          </Modal.Body>
          <Modal.Footer>
            <Button
              variant="success"
              onClick={() => setShowSuccessModal(false)}
            >
              OK
            </Button>
          </Modal.Footer>
        </Modal>
      </Container>
      <Footer />
    </>
  );
};

export default Bookapp;
